[{"path":"https://rayvonw.github.io/batchCurve/articles/dose-response-analysis.html","id":"accepted-assay-format","dir":"Articles","previous_headings":"","what":"Accepted assay format","title":"dose response analysis","text":"Accepted formats include 10 point serial dilution 2-3 replicates either 96 384 well plates. exact format dictate many positions (pos_x) available plate. available positions format shown : 96 well layout options. 384 well layout options. batchCurve comes bundled number example dose-response sample files:","code":"# lists the names of available example data files batchCurve_example() #>  [1] \"example_meta.csv\"     \"example1_data.csv\"    \"example1_results.csv\" #>  [4] \"TRno0000.CSV\"         \"TRno0001.CSV\"         \"TRno0002.CSV\"         #>  [7] \"TRno0003.CSV\"         \"TRno3735.CSV\"         \"TRno3965.CSV\"         #> [10] \"TRno4849.CSV\"         \"TRno4850.CSV\""},{"path":"https://rayvonw.github.io/batchCurve/articles/dose-response-analysis.html","id":"meta-data-requirments","dir":"Articles","previous_headings":"","what":"Meta data requirments","title":"dose response analysis","text":"Example_meta.csv contains meta data describe assays plate contents, one row represent one assay: Plate ID variable link meta plate file raw measurements Location data describing format positions plate assay sits Treatment cell ID information Dose range information plate_id position_id format replicates index compound cell starting_uM dilution_factor plate_4 pos_1 384w 3 C01 Torin2 Dd2 0.04 2 plate_4 pos_2 384w 3 C01 Torin2 Dd2 0.04 2 plate_4 pos_3 384w 3 C01 Torin2 Dd2 0.04 2 plate_4 pos_4 384w 3 C02 BT-C10 Dd2 0.50 2 plate_4 pos_5 384w 3 C02 BT-C10 Dd2 0.50 2 plate_4 pos_6 384w 3 C03 NITD609 Dd2 0.04 2 column names meta file rely exact text matching, best work template file. assays plate must setup number replicates, formats plates batch can different, .e meta include 384 well plate triplicate containing 10 assays well 96 well plate duplicate containing 3 assays. can filter meta data wish exclude certain assays.","code":"f <- batchCurve_example(\"example_meta.csv\") f"},{"path":"https://rayvonw.github.io/batchCurve/articles/dose-response-analysis.html","id":"raw-data-format-requirements","dir":"Articles","previous_headings":"","what":"Raw data format requirements","title":"dose response analysis","text":"analysis pipeline developed compatible Omega Fluostar plate reader csv output (ASCII), includes 3 required components: Data stored files prefix - ‘TRno’ ‘automated’. ID variable set reading plate matches plate_id meta file (Omega prefixes ‘ID1:’). row 3 column 1 raw data csv must match exactly meta file plate_ID name. Raw read data plate format well A01 begins row 10, column 1 file.","code":"#look at one of the raw data file examples f <- batchCurve_example(\"TRno3735.CSV\") #batchCurve looks in row 3 column 1 for ID variable utils::read.csv(f, nrow = 3, header = FALSE)[3,1] #> [1] \"ID1: plate_A3\" # showing file from row 9 head(utils::read.csv(f, skip = 8),11) #>   Chromatic..1   X X.1  X.2  X.3  X.4  X.5  X.6  X.7  X.8  X.9 X.10 #> 1     Cycle: 1  NA  NA   NA   NA   NA   NA   NA   NA   NA   NA   NA #> 2          341 574 598  600  626  666  705  708  722  737  746  512 #> 3          341 574 598  600  626  666  705  708  722  737 6997  512 #> 4          341 574 598  600  626  666  705  708  722  737 5973  485 #> 5          341 574 598  600  626  666  705  708  722  737 6997  516 #> 6          341 574 598  600  626  666  705  708  722  737 5973  517 #> 7          696 702 785 1474 2633 4078 5928 6064 6246 6965 6997  524 #> 8          636 621 714 1336 2365 3731 5050 6085 6065 5927 5973  483 #> 9          341 574 598  600  626  666  705  708  722  737  746  512"},{"path":"https://rayvonw.github.io/batchCurve/articles/dose-response-analysis.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"dose response analysis","text":"fit curves batch raw data, need supply fit_data() function meta file. can either file path setting working directory data lives. path supplied function assumes data working directory. output/results exported directory meta file. addition, user can supply function text batch_id, used prefix output file names. advisable avoid accumulating result files name makes searching results easier, particularity analysis run second time filtered meta file. function provide console feedback analysis progress. complete, two objects exported csv file also returned list. note: first assay example data set artificial designed fail fitting! batch_id_results.csv’ file containing meta data model coefficient columns appended. data frame also returned first item list analysis, row still represents 1 assay. unique identifier (IC50_key) assigned avoid clashes repeat assays link assay data. Normalised measurements dose uM exported unique IC50_key links back assay coefficients data frame.","code":"#use example files meta <- batchCurve_example(\"example_meta.csv\")  l <- fit_data(file_path = meta, batch_id = 'example1') m <- l[[1]] head(m, 10)[,c(1,6,8,13,20)] #>          IC50_key index cell                 IC50 hill_slope #> 1  VItFUKbnxuKBwD   C05  Dd2               Failed         NA #> 14 JBPqZQjtqsCIeq   C06  Dd2    0.397087567384264   1.673443 #> 11 F2V5RZW5mYMm1B   C04  Dd2    0.409200699062012   3.917486 #> 12 x23YC4qmXYO59O   C04  3D7    0.609087279032902   4.360740 #> 5  oB9thK71bb6OjU   C01  Dd2  0.00183920429016226   2.970942 #> 2  WCLWLyh31QUENq   C01  Dd2    0.001979863848655   6.139312 #> 3  SnxDjKihNRGHLx   C01  Dd2  0.00199157050920151   5.418731 #> 4  SY9FE6bb1iTjrb   C02  Dd2   0.0118873520155513   2.471598 #> 9  Tn6eumN0kANuTv   C02  Dd2   0.0120119550447347   2.119453 #> 6  icTUsQ1GKA0CP8   C03  Dd2 0.000860595386861181   6.341140 d <- l[[2]] head(d, 10) #>               key        dose replicate_1 replicate_2 replicate_3 #> 1  VItFUKbnxuKBwD 10.00000000      100.00       96.41       98.77 #> 2  VItFUKbnxuKBwD  5.00000000      100.00       96.41       98.77 #> 3  VItFUKbnxuKBwD  2.50000000      100.00       96.41       98.77 #> 4  VItFUKbnxuKBwD  1.25000000      100.00       96.41       98.77 #> 5  VItFUKbnxuKBwD  0.62500000        3.15        3.15        3.15 #> 6  VItFUKbnxuKBwD  0.31250000        3.15        3.15        3.15 #> 7  VItFUKbnxuKBwD  0.15625000        3.15        3.15        3.15 #> 8  VItFUKbnxuKBwD  0.07812500       96.41       96.41       96.41 #> 9  VItFUKbnxuKBwD  0.03906250       96.41       96.41       96.41 #> 10 VItFUKbnxuKBwD  0.01953125       96.41       96.41       96.41"},{"path":"https://rayvonw.github.io/batchCurve/articles/dose-response-analysis.html","id":"quality-control","dir":"Articles","previous_headings":"","what":"Quality Control","title":"dose response analysis","text":"standard Hill model enables generating sigmoidal curves capture dose-response data cases. However, appropriate cases multiple points inflection, .e multiphasic data. important users visually assess assay quality fit quality data accepting IC50 value. separate function plotting data models included batchCurve, plot_fit(). functionality separated model fitting procedure allow user option re-plot results manipulation, .e want filter failed assays merge multiple batches together. See vignette(\"visualise models\") walk procedure.","code":""},{"path":"https://rayvonw.github.io/batchCurve/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ray Coyle. Maintainer.","code":""},{"path":"https://rayvonw.github.io/batchCurve/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Coyle R (2024). batchCurve: Provides batch analysis dose-response modelling. R package version 0.1.0, https://rayvonw.github.io/gamma/, https://github.com/rayVonW/gamma.","code":"@Manual{,   title = {batchCurve: Provides batch analysis for dose-response modelling},   author = {Ray Coyle},   year = {2024},   note = {R package version 0.1.0, https://rayvonw.github.io/gamma/},   url = {https://github.com/rayVonW/gamma}, }"},{"path":[]},{"path":"https://rayvonw.github.io/batchCurve/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Provides batch analysis for dose-response modelling","text":"batchCurve bespoke analytical workflow batch analysis dose-response assays. Assays formats must 10 point serial dilution well positive negative growth control. accepted layouts assume either duplicate triplicate measurement either 96 384 well culture plates. batch drug assays can combination 96 /384 well plates. expected one raw plate reader csv file per assay plate analysis folder. Assays plate must number replicates. details setup can found vignette(\"dose response analysis\").","code":""},{"path":"https://rayvonw.github.io/batchCurve/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides batch analysis for dose-response modelling","text":"install_github function devtools package allows users install R packages hosted GitHub. requests developer’s name/package name.","code":"#First install devtools from CRAN install.packages(\"devtools\") # load devtools library(devtools) # use function to install a github package install_github(\"rayVonW/batchCurve\")"},{"path":"https://rayvonw.github.io/batchCurve/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Provides batch analysis for dose-response modelling","text":"can load package : two main functions use: fit_data(): Fits log logistic models batch raw dose-response data expects argument meta.csv file name, file found directory raw data file. batch id text name - prefix results files . vignette(\"dose-response-analysis\") gives expanded introduction fitting batches data. plot_fit(): Accepts batch log-logistic coefficients normalised raw data produce visualisations dose-response assay data allow assessment fit. accepts data frame model results data frame normalised data, exported directly fit_data(). User can include batch_id linking visualisation results file prefixes. vignette(\"visualise-models\") gives expanded introduction plotting results.","code":"library(batchCurve) #> _______________________________________ #>   This is version 0.1.0 of batchCurve #> ____________________________________________ #> Available functions: #> batchCurve_example #> fit_data #> plot_fit #all meta and raw data stored in ~/batch fit_data(file_path = '~/batch/meta-data.csv',           batch_id = 'batch01') #all meta and raw data stored in ~/batch plot_fit(results = df1,           data = df2,          batch_id = 'batch01')"},{"path":"https://rayvonw.github.io/batchCurve/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Provides batch analysis for dose-response modelling","text":"fit_data() wrapper function R package [drc] (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4696819).","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/batchCurve-package.html","id":null,"dir":"Reference","previous_headings":"","what":"batchCurve: Provides batch analysis for dose-response modelling — batchCurve-package","title":"batchCurve: Provides batch analysis for dose-response modelling — batchCurve-package","text":"tailored package analyse raw dose-response data corresponding meta data.","code":""},{"path":[]},{"path":"https://rayvonw.github.io/batchCurve/reference/batchCurve_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to readr example — batchCurve_example","title":"Get path to readr example — batchCurve_example","text":"batchCurve comes bundled number sample files `inst/extdata` directory. function make easy access","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/batchCurve_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to readr example — batchCurve_example","text":"","code":"batchCurve_example(file = NULL)"},{"path":"https://rayvonw.github.io/batchCurve/reference/batchCurve_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to readr example — batchCurve_example","text":"file Name file. `NULL`, example files listed.","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/batchCurve_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to readr example — batchCurve_example","text":"","code":"batchCurve_example() #>  [1] \"TRno0000.CSV\"         \"TRno0001.CSV\"         \"TRno0002.CSV\"         #>  [4] \"TRno0003.CSV\"         \"TRno3735.CSV\"         \"TRno3965.CSV\"         #>  [7] \"TRno4849.CSV\"         \"TRno4850.CSV\"         \"example1_data.csv\"    #> [10] \"example1_results.csv\" \"example_meta.csv\"     batchCurve_example(\"TRno4850.csv\") #> Error in system.file(\"extdata\", file, package = \"batchCurve\", mustWork = TRUE): no file found"},{"path":"https://rayvonw.github.io/batchCurve/reference/example_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose response meta data example — example_meta","title":"Dose response meta data example — example_meta","text":"example meta data file describing drug assays analysis ...","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/example_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose response meta data example — example_meta","text":"","code":"data(example_meta)"},{"path":"https://rayvonw.github.io/batchCurve/reference/example_meta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dose response meta data example — example_meta","text":"## `example_meta` data frame 23 rows 9 columns: plate_id ID given plates reader file position_id Position assay plate, 'pos_x' format Plate format, either '384w' '96w' replicates many replicates per assay used, either '2' '3' index label compound, used sorting output compound Supplier ID compound cell Cell ID starting_uM Drug concentration column 1 plate, .e. highest concentration uM dilution_factor serial dilution factor used assay","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/example_meta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dose response meta data example — example_meta","text":"author","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/fit_data.html","id":null,"dir":"Reference","previous_headings":"","what":"iterates over assays for IC50 estimation — fit_data","title":"iterates over assays for IC50 estimation — fit_data","text":"iterates assays IC50 estimation","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/fit_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iterates over assays for IC50 estimation — fit_data","text":"","code":"fit_data(file_path, batch_id)"},{"path":"https://rayvonw.github.io/batchCurve/reference/fit_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"iterates over assays for IC50 estimation — fit_data","text":"file_path file containing batches meta data batch_id unique character value identify batch","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/fit_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"iterates over assays for IC50 estimation — fit_data","text":"data frame LL4 model coefficients dose-response assays","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/plot_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces group plots of dose response models from fit_data() — plot_fit","title":"Produces group plots of dose response models from fit_data() — plot_fit","text":"Produces group plots dose response models fit_data()","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/plot_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces group plots of dose response models from fit_data() — plot_fit","text":"","code":"plot_fit(   results,   data,   batch_id,   plot.var = \"compound\",   colour.var = \"cell\",   facet.var = NULL,   grid.var = 3 )"},{"path":"https://rayvonw.github.io/batchCurve/reference/plot_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces group plots of dose response models from fit_data() — plot_fit","text":"results data frame, fit_data. data data frame, fit_data. batch_id character ID output file prefix. plot.var column name wish subset data per plot, default \"compound\", may wish specify \"cell\". colour.var column name wish differentiate data per plot colour, default = \"cell\", may wish specify \"compound\". facet.var column name wish differentiate data facet, default = NULL, may wish \"cell\" separate plots. grid.var numeric value specifying grid size exported pdf, default = 3 .e 3x3.","code":""},{"path":"https://rayvonw.github.io/batchCurve/reference/plot_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces group plots of dose response models from fit_data() — plot_fit","text":"list plot objects per plot_var","code":""}]
